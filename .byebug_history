c
@date_order
c
@date_order
@events.map(&:id).delete(params[:id].to_i)
@events.map(&:id)
@events
@date_order
c
params["id"].to_i
params["id"]
params[id]
params
Event.all[-2]
@date_order = @events.map(&:id)
@events = event_group.events
c
event_group = @event.group
@event = Event.find(params[:id])
@event
c
event_params
c
notification_params[:event_id]
c
User.find(rsvp.user_id).phone
black_team
"Black Team: #{black_team.join(', ')}\nWhite Team: #{white_team.join(', ')}"
Rsvp.where(event_id: 1, color: "white").map {|rsvp| User.find(rsvp.user_id).name}
Rsvp.where(event_id: 1, color: "black").map {|rsvp| User.find(rsvp.user_id).name}
c
user_params[:phone].split("").all? {|num| ("0".."9").to_a.include?(num)}
user_params[:phone].split("")
user_params[:phone]
user_params[:phone][0]
user_params[:phone].split
user_params[:phone]
user_params[:phone].split.split
user_params[:phone].split
("0".."9").to_a.include?("3")
user_params[:phone].split.all? 
user_params[:phone].split
user_params[:phone].split.all? {|num| ("0".."9").to_a.include?(num)}
("0".."9").to_a
user_params[:phone]
user_params[:phone].split.all? {|num| ("0".."9").include?(num)}
[1..8].include?(4)
["a".."z"].to_a
["0".."9"].to_a
["0".."9"].to_a.include?("1")
["0".."9"].include?("1")
user_params[:phone].split.all? {|num| ["0".."9"].include?(num)}
user_params[:phone] != nil
c
user_params[:phone]
c
Group.find_by(code: user_params[:code]) != nil
c
Group.find_by(code: user_params[:code]) == nil
Group.find_by(code: "nycfootball")
Group.find_by(code: user_params[:code])
user_params[:code]
user_params
c
Group.find_by(code: user_params[:code]).code === user_params[:code]
c
Group.find_by(code: user_params[:code]).code === user_params[:code]
Group.find_by(code: user_params[:code]).code
Group.find_by(code: user_params[:code])
Group.find_by(code: user_params[:code]).length
Group.find_by(code: user_params[:code]).length === 1
c
@user.id
@membership
c
Group.find_by(code: user_params[:code]).id
@user.id
Membership.all.last
Membership.new(user_id: @user.id, group_id: Group.find_by(code: user_params[:code]).id)
Membership.all.last
User.all.last
c
Group.find_by(code: user_params[:code]).id
Group.find_by(code: user_params[:code]).id)
c
Group.find_by(code: user_params[:code]).id
Group.find_by(code: user_params[:code])
Group.find_by(code: user_params[:code]
user_params[:code]
user_params
c
@user.groups.first == true
@user.groups.first
@user.groups
@user.texting
@user.name
@user.username
@user.id
@user
c
event_params[:group_id]
params["group_id"]
params[:group_id]
params
c
params[:id]
c
Group.find(params[:id]).events.where("date > ?", Date.today).sort_by{|a| a.date.to_date}.map(&:id)
Group.find(params[:id]).events.where("date > ?", Date.today).sort_by{|a| a.date.to_date}.pluck(:id)
Group.find(params[:id]).events.where("date > ?", Date.today).sort_by{|a| a.date.to_date}
Group.find(params[:id])
c
@events
c
Group.find(params[:id]).events.where("date > ?", Date.today)
Group.find(params[:id]).events.where("date > ?", Date.today).sort_by{|a| a.date.to_date}
c
Group.find(params[:id]).events.where("date > ?", Date.today).order(duration: :asc)
Group.find(params[:id]).events.where("date > ?", Date.today).order(duration: :desc)
Group.find(params[:id]).events.where("date > ?", Date.today)
group.events.where("date > ?", Date.today)
c
group = Group.find(params[:id]).events.where("date > ?", Date.today).sort_by{|a| a.date}
group = Group.find(params[:id]).events.where("date > ?", Date.today)
@events = group.events.where("date > ?", Date.today)
c
@events.where("date > ?", Date.today)
@events
c
User.find_by(session_token: session[:session_token])
session[:session_token]
c
current_user
c
User.find(user_params[:user_id])
c
User.find(user_params[:user_id])
c
User.find(user_params[:user_id])
c
User.find(user_params[:user_id])
c
User.all.second
c
a
c
user = User.find(user_params[:user_id]).texting
user = User.find(user_params[:user_id])
user_params[:user_id]
user_params[:texting]
user_params
c
Event.find(notification_params[:event_id]).rsvps[0].user_id
Event.find(notification_params[:event_id]).rsvps[0].id
Event.find(notification_params[:event_id]).rsvps[0].color
Event.find(notification_params[:event_id]).rsvps
Event.find(notification_params[:event_id]).rsvps.pluck(:user_id)
Event.find(notification_params[:event_id]).rsvps
Event.find(notification_params[:event_id]).rsvps.pluck(:phone)
Event.find(notification_params[:event_id]).rsvps
Event.find(notification_params[:event_id]).rsvps.find(:select => "phone")
Rsvp.find_by(event_id: notification_params[:event_id])
Event.find(notification_params[:event_id]).rsvps.find(:select => "phone")
Event.find(notification_params[:event_id]).rsvps.phone
Event.find(notification_params[:event_id]).rsvps
Event.find(notification_params[:event_id])
notification_params[:event_id]
notification_params
params["event_id"]
params
Event.find(params[:eventId])
c
@client
@twilio_number
c
User.where(id: group.organizer_id)[0].phone
User.where(id: group.organizer_id).first.phone
User.where(id: group.organizer_id).phone
User.where(id: group.organizer_id)
User.where(id: 1)
User.where(id: organizer_id)
c
Rsvp.find_by(user_id: rsvp_params[:user_id], event_id: rsvp_params[:event_id]).event.date
Rsvp.find_by(user_id: rsvp_params[:user_id], event_id: rsvp_params[:event_id]).event
c
Rsvp.find_by(user_id: rsvp_params[:user_id], event_id: rsvp_params[:event_id]).event.group
Rsvp.find_by(user_id: rsvp_params[:user_id], event_id: rsvp_params[:event_id]).event.group[0].date
Rsvp.find_by(user_id: rsvp_params[:user_id], event_id: rsvp_params[:event_id]).event.group.date
.date
Rsvp.find_by(user_id: rsvp_params[:user_id], event_id: rsvp_params[:event_id]).event.group
Rsvp.find_by(user_id: rsvp_params[:user_id], event_id: rsvp_params[:event_id])
@rsvp.event.group
@event
rsvp_params
rsvp_parms
c
rsvp_params
Rsvp.find_by(user_id: rsvp_params[:user_id], event_id: rsvp_params[:event_id])
c
@rsvp
c
event.rsvps.count < rsvp_event.max
rsvp_event.rsvps.count
rsvp_event.rsvps
rsvp_event.title
rsvp_event
c
params["group"]
params
c
params
group_params[:single]
c
Group.find(params[:id]).members
Group.find(params[:id])
c
group_params[:single] == "true"
c
group_params[:single]
group_params
params["single"]
params[:single]
params
c
params
c
@groups
c
Group.within(100, :origin => "#{group_params[:location]}")
group_params[:distance].to_i
params
c
params
c
Group.within(distance, :origin => "#{group_params[:location]}")
group_params[:distance].to_i
group_params[:distance]
params["group"]
c
group_params[:distance]
params["group"]
params["group"
c
quit
@test_group.where('name Like ?', "%#{group_params[:search_string]}%")c
@test_group.where('name Like ?', "%#{group_params[:search_string]}%").first
@test_group.where('name Like ?', "%#{group_params[:search_string]}%")
@test_group.where(name LIKE  "Football").first
@test_group.where(name: "Football in the Park").first
@test_group.where(name: "Football").first
@test_group.where("name = ?", group_params[:search_string]).first
@test_group.where("name LIKE ?", group_params[:search_string]).first
@test_group
@test_gropu
@test_group.where("name LIKE ?", group_params[:search_string]).first
@test_group.where("name LIKE ?", group_params[:search_string])
